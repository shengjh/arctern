<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1222" onload="init(evt)" viewBox="0 0 1200 1222" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1222" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy</text><text id="details" x="10" y="1205.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1205.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;module&gt; (numpy/__init__.py:145) (3 samples, 1.64%)</title><rect x="0.5464%" y="340" width="1.6393%" height="15" fill="rgb(227,0,7)"/><text x="0.7964%" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 1.64%)</title><rect x="0.5464%" y="356" width="1.6393%" height="15" fill="rgb(217,0,24)"/><text x="0.7964%" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.64%)</title><rect x="0.5464%" y="372" width="1.6393%" height="15" fill="rgb(221,193,54)"/><text x="0.7964%" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.64%)</title><rect x="0.5464%" y="388" width="1.6393%" height="15" fill="rgb(248,212,6)"/><text x="0.7964%" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.64%)</title><rect x="0.5464%" y="404" width="1.6393%" height="15" fill="rgb(208,68,35)"/><text x="0.7964%" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.64%)</title><rect x="0.5464%" y="420" width="1.6393%" height="15" fill="rgb(232,128,0)"/><text x="0.7964%" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.64%)</title><rect x="0.5464%" y="436" width="1.6393%" height="15" fill="rgb(207,160,47)"/><text x="0.7964%" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.64%)</title><rect x="0.5464%" y="452" width="1.6393%" height="15" fill="rgb(228,23,34)"/><text x="0.7964%" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:39) (2 samples, 1.09%)</title><rect x="1.0929%" y="468" width="1.0929%" height="15" fill="rgb(218,30,26)"/><text x="1.3429%" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.09%)</title><rect x="1.0929%" y="484" width="1.0929%" height="15" fill="rgb(220,122,19)"/><text x="1.3429%" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.09%)</title><rect x="1.0929%" y="500" width="1.0929%" height="15" fill="rgb(250,228,42)"/><text x="1.3429%" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.09%)</title><rect x="1.0929%" y="516" width="1.0929%" height="15" fill="rgb(240,193,28)"/><text x="1.3429%" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.09%)</title><rect x="1.0929%" y="532" width="1.0929%" height="15" fill="rgb(216,20,37)"/><text x="1.3429%" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.09%)</title><rect x="1.0929%" y="548" width="1.0929%" height="15" fill="rgb(206,188,39)"/><text x="1.3429%" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/lib/npyio.py:15) (2 samples, 1.09%)</title><rect x="1.0929%" y="564" width="1.0929%" height="15" fill="rgb(217,207,13)"/><text x="1.3429%" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.09%)</title><rect x="1.0929%" y="580" width="1.0929%" height="15" fill="rgb(231,73,38)"/><text x="1.3429%" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.09%)</title><rect x="1.0929%" y="596" width="1.0929%" height="15" fill="rgb(225,20,46)"/><text x="1.3429%" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.09%)</title><rect x="1.0929%" y="612" width="1.0929%" height="15" fill="rgb(210,31,41)"/><text x="1.3429%" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.09%)</title><rect x="1.0929%" y="628" width="1.0929%" height="15" fill="rgb(221,200,47)"/><text x="1.3429%" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.09%)</title><rect x="1.0929%" y="644" width="1.0929%" height="15" fill="rgb(226,26,5)"/><text x="1.3429%" y="654.50"></text></g><g><title>&lt;module&gt; (numpy/lib/_datasource.py:42) (2 samples, 1.09%)</title><rect x="1.0929%" y="660" width="1.0929%" height="15" fill="rgb(249,33,26)"/><text x="1.3429%" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.09%)</title><rect x="1.0929%" y="676" width="1.0929%" height="15" fill="rgb(235,183,28)"/><text x="1.3429%" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.09%)</title><rect x="1.0929%" y="692" width="1.0929%" height="15" fill="rgb(221,5,38)"/><text x="1.3429%" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.09%)</title><rect x="1.0929%" y="708" width="1.0929%" height="15" fill="rgb(247,18,42)"/><text x="1.3429%" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.09%)</title><rect x="1.0929%" y="724" width="1.0929%" height="15" fill="rgb(241,131,45)"/><text x="1.3429%" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.09%)</title><rect x="1.0929%" y="740" width="1.0929%" height="15" fill="rgb(249,31,29)"/><text x="1.3429%" y="750.50"></text></g><g><title>&lt;module&gt; (shutil.py:29) (2 samples, 1.09%)</title><rect x="1.0929%" y="756" width="1.0929%" height="15" fill="rgb(225,111,53)"/><text x="1.3429%" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.09%)</title><rect x="1.0929%" y="772" width="1.0929%" height="15" fill="rgb(238,160,17)"/><text x="1.3429%" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.09%)</title><rect x="1.0929%" y="788" width="1.0929%" height="15" fill="rgb(214,148,48)"/><text x="1.3429%" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.09%)</title><rect x="1.0929%" y="804" width="1.0929%" height="15" fill="rgb(232,36,49)"/><text x="1.3429%" y="814.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.09%)</title><rect x="1.0929%" y="820" width="1.0929%" height="15" fill="rgb(209,103,24)"/><text x="1.3429%" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.09%)</title><rect x="1.0929%" y="836" width="1.0929%" height="15" fill="rgb(229,88,8)"/><text x="1.3429%" y="846.50"></text></g><g><title>&lt;module&gt; (lzma.py:27) (2 samples, 1.09%)</title><rect x="1.0929%" y="852" width="1.0929%" height="15" fill="rgb(213,181,19)"/><text x="1.3429%" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.09%)</title><rect x="1.0929%" y="868" width="1.0929%" height="15" fill="rgb(254,191,54)"/><text x="1.3429%" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.09%)</title><rect x="1.0929%" y="884" width="1.0929%" height="15" fill="rgb(241,83,37)"/><text x="1.3429%" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (2 samples, 1.09%)</title><rect x="1.0929%" y="900" width="1.0929%" height="15" fill="rgb(233,36,39)"/><text x="1.3429%" y="910.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (2 samples, 1.09%)</title><rect x="1.0929%" y="916" width="1.0929%" height="15" fill="rgb(226,3,54)"/><text x="1.3429%" y="926.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (2 samples, 1.09%)</title><rect x="1.0929%" y="932" width="1.0929%" height="15" fill="rgb(245,192,40)"/><text x="1.3429%" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.09%)</title><rect x="1.0929%" y="948" width="1.0929%" height="15" fill="rgb(238,167,29)"/><text x="1.3429%" y="958.50"></text></g><g><title>dlopen (libdl-2.27.so) (2 samples, 1.09%)</title><rect x="1.0929%" y="964" width="1.0929%" height="15" fill="rgb(232,182,51)"/><text x="1.3429%" y="974.50"></text></g><g><title>0x7f9098d9d735 (libdl-2.27.so) (2 samples, 1.09%)</title><rect x="1.0929%" y="980" width="1.0929%" height="15" fill="rgb(231,60,39)"/><text x="1.3429%" y="990.50"></text></g><g><title>_dl_catch_error (libc-2.27.so) (2 samples, 1.09%)</title><rect x="1.0929%" y="996" width="1.0929%" height="15" fill="rgb(208,69,12)"/><text x="1.3429%" y="1006.50"></text></g><g><title>_dl_catch_exception (libc-2.27.so) (2 samples, 1.09%)</title><rect x="1.0929%" y="1012" width="1.0929%" height="15" fill="rgb(235,93,37)"/><text x="1.3429%" y="1022.50"></text></g><g><title>0x7f9098d9cf96 (libdl-2.27.so) (2 samples, 1.09%)</title><rect x="1.0929%" y="1028" width="1.0929%" height="15" fill="rgb(213,116,39)"/><text x="1.3429%" y="1038.50"></text></g><g><title>0x7f90995c47ca (ld-2.27.so) (2 samples, 1.09%)</title><rect x="1.0929%" y="1044" width="1.0929%" height="15" fill="rgb(222,207,29)"/><text x="1.3429%" y="1054.50"></text></g><g><title>_dl_catch_exception (libc-2.27.so) (2 samples, 1.09%)</title><rect x="1.0929%" y="1060" width="1.0929%" height="15" fill="rgb(206,96,30)"/><text x="1.3429%" y="1070.50"></text></g><g><title>0x7f90995c4f49 (ld-2.27.so) (2 samples, 1.09%)</title><rect x="1.0929%" y="1076" width="1.0929%" height="15" fill="rgb(218,138,4)"/><text x="1.3429%" y="1086.50"></text></g><g><title>0x7f90995be618 (ld-2.27.so) (2 samples, 1.09%)</title><rect x="1.0929%" y="1092" width="1.0929%" height="15" fill="rgb(250,191,14)"/><text x="1.3429%" y="1102.50"></text></g><g><title>_dl_catch_exception (libc-2.27.so) (2 samples, 1.09%)</title><rect x="1.0929%" y="1108" width="1.0929%" height="15" fill="rgb(239,60,40)"/><text x="1.3429%" y="1118.50"></text></g><g><title>0x7f90995be312 (ld-2.27.so) (2 samples, 1.09%)</title><rect x="1.0929%" y="1124" width="1.0929%" height="15" fill="rgb(206,27,48)"/><text x="1.3429%" y="1134.50"></text></g><g><title>0x7f90995b8ffc (ld-2.27.so) (2 samples, 1.09%)</title><rect x="1.0929%" y="1140" width="1.0929%" height="15" fill="rgb(225,35,8)"/><text x="1.3429%" y="1150.50"></text></g><g><title>0x7f90995b6d69 (ld-2.27.so) (2 samples, 1.09%)</title><rect x="1.0929%" y="1156" width="1.0929%" height="15" fill="rgb(250,213,24)"/><text x="1.3429%" y="1166.50"></text></g><g><title>0x7f90995ccf43 (ld-2.27.so) (2 samples, 1.09%)</title><rect x="1.0929%" y="1172" width="1.0929%" height="15" fill="rgb(247,123,22)"/><text x="1.3429%" y="1182.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:153) (2 samples, 1.09%)</title><rect x="2.1858%" y="340" width="1.0929%" height="15" fill="rgb(231,138,38)"/><text x="2.4358%" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 1.09%)</title><rect x="2.1858%" y="356" width="1.0929%" height="15" fill="rgb(231,145,46)"/><text x="2.4358%" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.09%)</title><rect x="2.1858%" y="372" width="1.0929%" height="15" fill="rgb(251,118,11)"/><text x="2.4358%" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.09%)</title><rect x="2.1858%" y="388" width="1.0929%" height="15" fill="rgb(217,147,25)"/><text x="2.4358%" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.09%)</title><rect x="2.1858%" y="404" width="1.0929%" height="15" fill="rgb(247,81,37)"/><text x="2.4358%" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.09%)</title><rect x="2.1858%" y="420" width="1.0929%" height="15" fill="rgb(209,12,38)"/><text x="2.4358%" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.09%)</title><rect x="2.1858%" y="436" width="1.0929%" height="15" fill="rgb(227,1,9)"/><text x="2.4358%" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.09%)</title><rect x="2.1858%" y="452" width="1.0929%" height="15" fill="rgb(248,47,43)"/><text x="2.4358%" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/ctypeslib.py:373) (2 samples, 1.09%)</title><rect x="2.1858%" y="468" width="1.0929%" height="15" fill="rgb(221,10,30)"/><text x="2.4358%" y="478.50"></text></g><g><title>_get_scalar_type_map (numpy/ctypeslib.py:370) (2 samples, 1.09%)</title><rect x="2.1858%" y="484" width="1.0929%" height="15" fill="rgb(210,229,1)"/><text x="2.4358%" y="494.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/ctypeslib.py:370) (2 samples, 1.09%)</title><rect x="2.1858%" y="500" width="1.0929%" height="15" fill="rgb(222,148,37)"/><text x="2.4358%" y="510.50"></text></g><g><title>arraydescr_new (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (2 samples, 1.09%)</title><rect x="2.1858%" y="516" width="1.0929%" height="15" fill="rgb(234,67,33)"/><text x="2.4358%" y="526.50"></text></g><g><title>PyArray_DescrConverter (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (2 samples, 1.09%)</title><rect x="2.1858%" y="532" width="1.0929%" height="15" fill="rgb(247,98,35)"/><text x="2.4358%" y="542.50"></text></g><g><title>_arraydescr_from_ctypes_type (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (2 samples, 1.09%)</title><rect x="2.1858%" y="548" width="1.0929%" height="15" fill="rgb(247,138,52)"/><text x="2.4358%" y="558.50"></text></g><g><title>&lt;module&gt; (pyarrow/compat.py:24) (7 samples, 3.83%)</title><rect x="0.0000%" y="244" width="3.8251%" height="15" fill="rgb(213,79,30)"/><text x="0.2500%" y="254.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 3.83%)</title><rect x="0.0000%" y="260" width="3.8251%" height="15" fill="rgb(246,177,23)"/><text x="0.2500%" y="270.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 3.83%)</title><rect x="0.0000%" y="276" width="3.8251%" height="15" fill="rgb(230,62,27)"/><text x="0.2500%" y="286.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 3.83%)</title><rect x="0.0000%" y="292" width="3.8251%" height="15" fill="rgb(216,154,8)"/><text x="0.2500%" y="302.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 3.83%)</title><rect x="0.0000%" y="308" width="3.8251%" height="15" fill="rgb(244,35,45)"/><text x="0.2500%" y="318.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 3.83%)</title><rect x="0.0000%" y="324" width="3.8251%" height="15" fill="rgb(251,115,12)"/><text x="0.2500%" y="334.50">_cal..</text></g><g><title>&lt;module&gt; (profile_geo.py:15) (9 samples, 4.92%)</title><rect x="0.0000%" y="52" width="4.9180%" height="15" fill="rgb(240,54,50)"/><text x="0.2500%" y="62.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 4.92%)</title><rect x="0.0000%" y="68" width="4.9180%" height="15" fill="rgb(233,84,52)"/><text x="0.2500%" y="78.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 4.92%)</title><rect x="0.0000%" y="84" width="4.9180%" height="15" fill="rgb(207,117,47)"/><text x="0.2500%" y="94.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 4.92%)</title><rect x="0.0000%" y="100" width="4.9180%" height="15" fill="rgb(249,43,39)"/><text x="0.2500%" y="110.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 4.92%)</title><rect x="0.0000%" y="116" width="4.9180%" height="15" fill="rgb(209,38,44)"/><text x="0.2500%" y="126.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 4.92%)</title><rect x="0.0000%" y="132" width="4.9180%" height="15" fill="rgb(236,212,23)"/><text x="0.2500%" y="142.50">_call_..</text></g><g><title>&lt;module&gt; (pyarrow/__init__.py:47) (9 samples, 4.92%)</title><rect x="0.0000%" y="148" width="4.9180%" height="15" fill="rgb(242,79,21)"/><text x="0.2500%" y="158.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 4.92%)</title><rect x="0.0000%" y="164" width="4.9180%" height="15" fill="rgb(211,96,35)"/><text x="0.2500%" y="174.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 4.92%)</title><rect x="0.0000%" y="180" width="4.9180%" height="15" fill="rgb(253,215,40)"/><text x="0.2500%" y="190.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 4.92%)</title><rect x="0.0000%" y="196" width="4.9180%" height="15" fill="rgb(211,81,21)"/><text x="0.2500%" y="206.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 4.92%)</title><rect x="0.0000%" y="212" width="4.9180%" height="15" fill="rgb(208,190,38)"/><text x="0.2500%" y="222.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 4.92%)</title><rect x="0.0000%" y="228" width="4.9180%" height="15" fill="rgb(235,213,38)"/><text x="0.2500%" y="238.50">_call_..</text></g><g><title>&lt;module&gt; (pyarrow/compat.py:39) (2 samples, 1.09%)</title><rect x="3.8251%" y="244" width="1.0929%" height="15" fill="rgb(237,122,38)"/><text x="4.0751%" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.09%)</title><rect x="3.8251%" y="260" width="1.0929%" height="15" fill="rgb(244,218,35)"/><text x="4.0751%" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.09%)</title><rect x="3.8251%" y="276" width="1.0929%" height="15" fill="rgb(240,68,47)"/><text x="4.0751%" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.09%)</title><rect x="3.8251%" y="292" width="1.0929%" height="15" fill="rgb(210,16,53)"/><text x="4.0751%" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.09%)</title><rect x="3.8251%" y="308" width="1.0929%" height="15" fill="rgb(235,124,12)"/><text x="4.0751%" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.09%)</title><rect x="3.8251%" y="324" width="1.0929%" height="15" fill="rgb(224,169,11)"/><text x="4.0751%" y="334.50"></text></g><g><title>&lt;module&gt; (unittest/__init__.py:64) (2 samples, 1.09%)</title><rect x="3.8251%" y="340" width="1.0929%" height="15" fill="rgb(250,166,2)"/><text x="4.0751%" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.09%)</title><rect x="3.8251%" y="356" width="1.0929%" height="15" fill="rgb(242,216,29)"/><text x="4.0751%" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.09%)</title><rect x="3.8251%" y="372" width="1.0929%" height="15" fill="rgb(230,116,27)"/><text x="4.0751%" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.09%)</title><rect x="3.8251%" y="388" width="1.0929%" height="15" fill="rgb(228,99,48)"/><text x="4.0751%" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.09%)</title><rect x="3.8251%" y="404" width="1.0929%" height="15" fill="rgb(253,11,6)"/><text x="4.0751%" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.09%)</title><rect x="3.8251%" y="420" width="1.0929%" height="15" fill="rgb(247,143,39)"/><text x="4.0751%" y="430.50"></text></g><g><title>&lt;module&gt; (unittest/main.py:7) (2 samples, 1.09%)</title><rect x="3.8251%" y="436" width="1.0929%" height="15" fill="rgb(236,97,10)"/><text x="4.0751%" y="446.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 1.09%)</title><rect x="3.8251%" y="452" width="1.0929%" height="15" fill="rgb(233,208,19)"/><text x="4.0751%" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.09%)</title><rect x="3.8251%" y="468" width="1.0929%" height="15" fill="rgb(216,164,2)"/><text x="4.0751%" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.09%)</title><rect x="3.8251%" y="484" width="1.0929%" height="15" fill="rgb(220,129,5)"/><text x="4.0751%" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.09%)</title><rect x="3.8251%" y="500" width="1.0929%" height="15" fill="rgb(242,17,10)"/><text x="4.0751%" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.09%)</title><rect x="3.8251%" y="516" width="1.0929%" height="15" fill="rgb(242,107,0)"/><text x="4.0751%" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (2 samples, 1.09%)</title><rect x="3.8251%" y="532" width="1.0929%" height="15" fill="rgb(251,28,31)"/><text x="4.0751%" y="542.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (2 samples, 1.09%)</title><rect x="3.8251%" y="548" width="1.0929%" height="15" fill="rgb(233,223,10)"/><text x="4.0751%" y="558.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (2 samples, 1.09%)</title><rect x="3.8251%" y="564" width="1.0929%" height="15" fill="rgb(215,21,27)"/><text x="4.0751%" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:11) (2 samples, 1.09%)</title><rect x="5.4645%" y="340" width="1.0929%" height="15" fill="rgb(232,23,21)"/><text x="5.7145%" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.09%)</title><rect x="5.4645%" y="356" width="1.0929%" height="15" fill="rgb(244,5,23)"/><text x="5.7145%" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.09%)</title><rect x="5.4645%" y="372" width="1.0929%" height="15" fill="rgb(226,81,46)"/><text x="5.7145%" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.09%)</title><rect x="5.4645%" y="388" width="1.0929%" height="15" fill="rgb(247,70,30)"/><text x="5.7145%" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.09%)</title><rect x="5.4645%" y="404" width="1.0929%" height="15" fill="rgb(212,68,19)"/><text x="5.7145%" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.09%)</title><rect x="5.4645%" y="420" width="1.0929%" height="15" fill="rgb(240,187,13)"/><text x="5.7145%" y="430.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/interval.py:45) (2 samples, 1.09%)</title><rect x="5.4645%" y="436" width="1.0929%" height="15" fill="rgb(223,113,26)"/><text x="5.7145%" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.09%)</title><rect x="5.4645%" y="452" width="1.0929%" height="15" fill="rgb(206,192,2)"/><text x="5.7145%" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.09%)</title><rect x="5.4645%" y="468" width="1.0929%" height="15" fill="rgb(241,108,4)"/><text x="5.7145%" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.09%)</title><rect x="5.4645%" y="484" width="1.0929%" height="15" fill="rgb(247,173,49)"/><text x="5.7145%" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.09%)</title><rect x="5.4645%" y="500" width="1.0929%" height="15" fill="rgb(224,114,35)"/><text x="5.7145%" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.09%)</title><rect x="5.4645%" y="516" width="1.0929%" height="15" fill="rgb(245,159,27)"/><text x="5.7145%" y="526.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:15) (4 samples, 2.19%)</title><rect x="5.4645%" y="244" width="2.1858%" height="15" fill="rgb(245,172,44)"/><text x="5.7145%" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 2.19%)</title><rect x="5.4645%" y="260" width="2.1858%" height="15" fill="rgb(236,23,11)"/><text x="5.7145%" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 2.19%)</title><rect x="5.4645%" y="276" width="2.1858%" height="15" fill="rgb(205,117,38)"/><text x="5.7145%" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 2.19%)</title><rect x="5.4645%" y="292" width="2.1858%" height="15" fill="rgb(237,72,25)"/><text x="5.7145%" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 2.19%)</title><rect x="5.4645%" y="308" width="2.1858%" height="15" fill="rgb(244,70,9)"/><text x="5.7145%" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.19%)</title><rect x="5.4645%" y="324" width="2.1858%" height="15" fill="rgb(217,125,39)"/><text x="5.7145%" y="334.50">_..</text></g><g><title>&lt;module&gt; (pandas/core/window/rolling.py:1801) (2 samples, 1.09%)</title><rect x="8.1967%" y="932" width="1.0929%" height="15" fill="rgb(235,36,10)"/><text x="8.4467%" y="942.50"></text></g><g><title>Rolling (pandas/core/window/rolling.py:1899) (2 samples, 1.09%)</title><rect x="8.1967%" y="948" width="1.0929%" height="15" fill="rgb(251,123,47)"/><text x="8.4467%" y="958.50"></text></g><g><title>dedent (textwrap.py:461) (2 samples, 1.09%)</title><rect x="8.1967%" y="964" width="1.0929%" height="15" fill="rgb(221,13,13)"/><text x="8.4467%" y="974.50"></text></g><g><title>sub (re.py:192) (2 samples, 1.09%)</title><rect x="8.1967%" y="980" width="1.0929%" height="15" fill="rgb(238,131,9)"/><text x="8.4467%" y="990.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (2 samples, 1.09%)</title><rect x="8.1967%" y="996" width="1.0929%" height="15" fill="rgb(211,50,8)"/><text x="8.4467%" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/window/__init__.py:1) (3 samples, 1.64%)</title><rect x="8.1967%" y="740" width="1.6393%" height="15" fill="rgb(245,182,24)"/><text x="8.4467%" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.64%)</title><rect x="8.1967%" y="756" width="1.6393%" height="15" fill="rgb(242,14,37)"/><text x="8.4467%" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.64%)</title><rect x="8.1967%" y="772" width="1.6393%" height="15" fill="rgb(246,228,12)"/><text x="8.4467%" y="782.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.64%)</title><rect x="8.1967%" y="788" width="1.6393%" height="15" fill="rgb(213,55,15)"/><text x="8.4467%" y="798.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.64%)</title><rect x="8.1967%" y="804" width="1.6393%" height="15" fill="rgb(209,9,3)"/><text x="8.4467%" y="814.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.64%)</title><rect x="8.1967%" y="820" width="1.6393%" height="15" fill="rgb(230,59,30)"/><text x="8.4467%" y="830.50"></text></g><g><title>&lt;module&gt; (pandas/core/window/ewm.py:18) (3 samples, 1.64%)</title><rect x="8.1967%" y="836" width="1.6393%" height="15" fill="rgb(209,121,21)"/><text x="8.4467%" y="846.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.64%)</title><rect x="8.1967%" y="852" width="1.6393%" height="15" fill="rgb(220,109,13)"/><text x="8.4467%" y="862.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.64%)</title><rect x="8.1967%" y="868" width="1.6393%" height="15" fill="rgb(232,18,1)"/><text x="8.4467%" y="878.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.64%)</title><rect x="8.1967%" y="884" width="1.6393%" height="15" fill="rgb(215,41,42)"/><text x="8.4467%" y="894.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.64%)</title><rect x="8.1967%" y="900" width="1.6393%" height="15" fill="rgb(224,123,36)"/><text x="8.4467%" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.64%)</title><rect x="8.1967%" y="916" width="1.6393%" height="15" fill="rgb(240,125,3)"/><text x="8.4467%" y="926.50"></text></g><g><title>&lt;module&gt; (profile_geo.py:16) (11 samples, 6.01%)</title><rect x="4.9180%" y="52" width="6.0109%" height="15" fill="rgb(205,98,50)"/><text x="5.1680%" y="62.50">&lt;module&gt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 6.01%)</title><rect x="4.9180%" y="68" width="6.0109%" height="15" fill="rgb(205,185,37)"/><text x="5.1680%" y="78.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (11 samples, 6.01%)</title><rect x="4.9180%" y="84" width="6.0109%" height="15" fill="rgb(238,207,15)"/><text x="5.1680%" y="94.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (11 samples, 6.01%)</title><rect x="4.9180%" y="100" width="6.0109%" height="15" fill="rgb(213,199,42)"/><text x="5.1680%" y="110.50">_load_un..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (11 samples, 6.01%)</title><rect x="4.9180%" y="116" width="6.0109%" height="15" fill="rgb(235,201,11)"/><text x="5.1680%" y="126.50">exec_mod..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 6.01%)</title><rect x="4.9180%" y="132" width="6.0109%" height="15" fill="rgb(207,46,11)"/><text x="5.1680%" y="142.50">_call_wi..</text></g><g><title>&lt;module&gt; (pandas/__init__.py:54) (10 samples, 5.46%)</title><rect x="5.4645%" y="148" width="5.4645%" height="15" fill="rgb(241,35,35)"/><text x="5.7145%" y="158.50">&lt;module..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 5.46%)</title><rect x="5.4645%" y="164" width="5.4645%" height="15" fill="rgb(243,32,47)"/><text x="5.7145%" y="174.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 5.46%)</title><rect x="5.4645%" y="180" width="5.4645%" height="15" fill="rgb(247,202,23)"/><text x="5.7145%" y="190.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 5.46%)</title><rect x="5.4645%" y="196" width="5.4645%" height="15" fill="rgb(219,102,11)"/><text x="5.7145%" y="206.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 5.46%)</title><rect x="5.4645%" y="212" width="5.4645%" height="15" fill="rgb(243,110,44)"/><text x="5.7145%" y="222.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 5.46%)</title><rect x="5.4645%" y="228" width="5.4645%" height="15" fill="rgb(222,74,54)"/><text x="5.7145%" y="238.50">_call_w..</text></g><g><title>&lt;module&gt; (pandas/core/api.py:29) (6 samples, 3.28%)</title><rect x="7.6503%" y="244" width="3.2787%" height="15" fill="rgb(216,99,12)"/><text x="7.9003%" y="254.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 3.28%)</title><rect x="7.6503%" y="260" width="3.2787%" height="15" fill="rgb(226,22,26)"/><text x="7.9003%" y="270.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 3.28%)</title><rect x="7.6503%" y="276" width="3.2787%" height="15" fill="rgb(217,163,10)"/><text x="7.9003%" y="286.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 3.28%)</title><rect x="7.6503%" y="292" width="3.2787%" height="15" fill="rgb(213,25,53)"/><text x="7.9003%" y="302.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 3.28%)</title><rect x="7.6503%" y="308" width="3.2787%" height="15" fill="rgb(252,105,26)"/><text x="7.9003%" y="318.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 3.28%)</title><rect x="7.6503%" y="324" width="3.2787%" height="15" fill="rgb(220,39,43)"/><text x="7.9003%" y="334.50">_ca..</text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (6 samples, 3.28%)</title><rect x="7.6503%" y="340" width="3.2787%" height="15" fill="rgb(229,68,48)"/><text x="7.9003%" y="350.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 3.28%)</title><rect x="7.6503%" y="356" width="3.2787%" height="15" fill="rgb(252,8,32)"/><text x="7.9003%" y="366.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 3.28%)</title><rect x="7.6503%" y="372" width="3.2787%" height="15" fill="rgb(223,20,43)"/><text x="7.9003%" y="382.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 3.28%)</title><rect x="7.6503%" y="388" width="3.2787%" height="15" fill="rgb(229,81,49)"/><text x="7.9003%" y="398.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 3.28%)</title><rect x="7.6503%" y="404" width="3.2787%" height="15" fill="rgb(236,28,36)"/><text x="7.9003%" y="414.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 3.28%)</title><rect x="7.6503%" y="420" width="3.2787%" height="15" fill="rgb(249,185,26)"/><text x="7.9003%" y="430.50">_ca..</text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:60) (6 samples, 3.28%)</title><rect x="7.6503%" y="436" width="3.2787%" height="15" fill="rgb(249,174,33)"/><text x="7.9003%" y="446.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 3.28%)</title><rect x="7.6503%" y="452" width="3.2787%" height="15" fill="rgb(233,201,37)"/><text x="7.9003%" y="462.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 3.28%)</title><rect x="7.6503%" y="468" width="3.2787%" height="15" fill="rgb(221,78,26)"/><text x="7.9003%" y="478.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 3.28%)</title><rect x="7.6503%" y="484" width="3.2787%" height="15" fill="rgb(250,127,30)"/><text x="7.9003%" y="494.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 3.28%)</title><rect x="7.6503%" y="500" width="3.2787%" height="15" fill="rgb(230,49,44)"/><text x="7.9003%" y="510.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 3.28%)</title><rect x="7.6503%" y="516" width="3.2787%" height="15" fill="rgb(229,67,23)"/><text x="7.9003%" y="526.50">_ca..</text></g><g><title>&lt;module&gt; (pandas/core/frame.py:124) (5 samples, 2.73%)</title><rect x="8.1967%" y="532" width="2.7322%" height="15" fill="rgb(249,83,47)"/><text x="8.4467%" y="542.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.73%)</title><rect x="8.1967%" y="548" width="2.7322%" height="15" fill="rgb(215,43,3)"/><text x="8.4467%" y="558.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.73%)</title><rect x="8.1967%" y="564" width="2.7322%" height="15" fill="rgb(238,154,13)"/><text x="8.4467%" y="574.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.73%)</title><rect x="8.1967%" y="580" width="2.7322%" height="15" fill="rgb(219,56,2)"/><text x="8.4467%" y="590.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.73%)</title><rect x="8.1967%" y="596" width="2.7322%" height="15" fill="rgb(233,0,4)"/><text x="8.4467%" y="606.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.73%)</title><rect x="8.1967%" y="612" width="2.7322%" height="15" fill="rgb(235,30,7)"/><text x="8.4467%" y="622.50">_c..</text></g><g><title>&lt;module&gt; (pandas/core/series.py:4572) (5 samples, 2.73%)</title><rect x="8.1967%" y="628" width="2.7322%" height="15" fill="rgb(250,79,13)"/><text x="8.4467%" y="638.50">&lt;m..</text></g><g><title>_add_series_or_dataframe_operations (pandas/core/generic.py:10351) (5 samples, 2.73%)</title><rect x="8.1967%" y="644" width="2.7322%" height="15" fill="rgb(211,146,34)"/><text x="8.4467%" y="654.50">_a..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.73%)</title><rect x="8.1967%" y="660" width="2.7322%" height="15" fill="rgb(228,22,38)"/><text x="8.4467%" y="670.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.73%)</title><rect x="8.1967%" y="676" width="2.7322%" height="15" fill="rgb(235,168,5)"/><text x="8.4467%" y="686.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.73%)</title><rect x="8.1967%" y="692" width="2.7322%" height="15" fill="rgb(221,155,16)"/><text x="8.4467%" y="702.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.73%)</title><rect x="8.1967%" y="708" width="2.7322%" height="15" fill="rgb(215,215,53)"/><text x="8.4467%" y="718.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.73%)</title><rect x="8.1967%" y="724" width="2.7322%" height="15" fill="rgb(223,4,10)"/><text x="8.4467%" y="734.50">_c..</text></g><g><title>&lt;module&gt; (pandas/core/window/__init__.py:2) (2 samples, 1.09%)</title><rect x="9.8361%" y="740" width="1.0929%" height="15" fill="rgb(234,103,6)"/><text x="10.0861%" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.09%)</title><rect x="9.8361%" y="756" width="1.0929%" height="15" fill="rgb(227,97,0)"/><text x="10.0861%" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.09%)</title><rect x="9.8361%" y="772" width="1.0929%" height="15" fill="rgb(234,150,53)"/><text x="10.0861%" y="782.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.09%)</title><rect x="9.8361%" y="788" width="1.0929%" height="15" fill="rgb(228,201,54)"/><text x="10.0861%" y="798.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.09%)</title><rect x="9.8361%" y="804" width="1.0929%" height="15" fill="rgb(222,22,37)"/><text x="10.0861%" y="814.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.09%)</title><rect x="9.8361%" y="820" width="1.0929%" height="15" fill="rgb(237,53,32)"/><text x="10.0861%" y="830.50"></text></g><g><title>&lt;module&gt; (pandas/core/window/expanding.py:10) (2 samples, 1.09%)</title><rect x="9.8361%" y="836" width="1.0929%" height="15" fill="rgb(233,25,53)"/><text x="10.0861%" y="846.50"></text></g><g><title>Expanding (pandas/core/window/expanding.py:138) (2 samples, 1.09%)</title><rect x="9.8361%" y="852" width="1.0929%" height="15" fill="rgb(210,40,34)"/><text x="10.0861%" y="862.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:334) (2 samples, 1.09%)</title><rect x="9.8361%" y="868" width="1.0929%" height="15" fill="rgb(241,220,44)"/><text x="10.0861%" y="878.50"></text></g><g><title>dedent (textwrap.py:438) (2 samples, 1.09%)</title><rect x="9.8361%" y="884" width="1.0929%" height="15" fill="rgb(235,28,35)"/><text x="10.0861%" y="894.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 1.09%)</title><rect x="9.8361%" y="900" width="1.0929%" height="15" fill="rgb(210,56,17)"/><text x="10.0861%" y="910.50"></text></g><g><title>0x7f90995bb106 (ld-2.27.so) (2 samples, 1.09%)</title><rect x="12.0219%" y="436" width="1.0929%" height="15" fill="rgb(224,130,29)"/><text x="12.2719%" y="446.50"></text></g><g><title>&lt;module&gt; (profile_geo.py:17) (5 samples, 2.73%)</title><rect x="10.9290%" y="52" width="2.7322%" height="15" fill="rgb(235,212,8)"/><text x="11.1790%" y="62.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.73%)</title><rect x="10.9290%" y="68" width="2.7322%" height="15" fill="rgb(223,33,50)"/><text x="11.1790%" y="78.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.73%)</title><rect x="10.9290%" y="84" width="2.7322%" height="15" fill="rgb(219,149,13)"/><text x="11.1790%" y="94.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.73%)</title><rect x="10.9290%" y="100" width="2.7322%" height="15" fill="rgb(250,156,29)"/><text x="11.1790%" y="110.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.73%)</title><rect x="10.9290%" y="116" width="2.7322%" height="15" fill="rgb(216,193,19)"/><text x="11.1790%" y="126.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.73%)</title><rect x="10.9290%" y="132" width="2.7322%" height="15" fill="rgb(216,135,14)"/><text x="11.1790%" y="142.50">_c..</text></g><g><title>&lt;module&gt; (osgeo/__init__.py:41) (5 samples, 2.73%)</title><rect x="10.9290%" y="148" width="2.7322%" height="15" fill="rgb(241,47,5)"/><text x="11.1790%" y="158.50">&lt;m..</text></g><g><title>swig_import_helper (osgeo/__init__.py:24) (4 samples, 2.19%)</title><rect x="11.4754%" y="164" width="2.1858%" height="15" fill="rgb(233,42,35)"/><text x="11.7254%" y="174.50">s..</text></g><g><title>load_module (imp.py:242) (4 samples, 2.19%)</title><rect x="11.4754%" y="180" width="2.1858%" height="15" fill="rgb(231,13,6)"/><text x="11.7254%" y="190.50">l..</text></g><g><title>load_dynamic (imp.py:342) (4 samples, 2.19%)</title><rect x="11.4754%" y="196" width="2.1858%" height="15" fill="rgb(207,181,40)"/><text x="11.7254%" y="206.50">l..</text></g><g><title>_load (&lt;frozen importlib._bootstrap&gt;:696) (4 samples, 2.19%)</title><rect x="11.4754%" y="212" width="2.1858%" height="15" fill="rgb(254,173,49)"/><text x="11.7254%" y="222.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (4 samples, 2.19%)</title><rect x="11.4754%" y="228" width="2.1858%" height="15" fill="rgb(221,1,38)"/><text x="11.7254%" y="238.50">_..</text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (4 samples, 2.19%)</title><rect x="11.4754%" y="244" width="2.1858%" height="15" fill="rgb(206,124,46)"/><text x="11.7254%" y="254.50">m..</text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (4 samples, 2.19%)</title><rect x="11.4754%" y="260" width="2.1858%" height="15" fill="rgb(249,21,11)"/><text x="11.7254%" y="270.50">c..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.19%)</title><rect x="11.4754%" y="276" width="2.1858%" height="15" fill="rgb(222,201,40)"/><text x="11.7254%" y="286.50">_..</text></g><g><title>dlopen (libdl-2.27.so) (4 samples, 2.19%)</title><rect x="11.4754%" y="292" width="2.1858%" height="15" fill="rgb(235,61,29)"/><text x="11.7254%" y="302.50">d..</text></g><g><title>0x7f9098d9d735 (libdl-2.27.so) (4 samples, 2.19%)</title><rect x="11.4754%" y="308" width="2.1858%" height="15" fill="rgb(219,207,3)"/><text x="11.7254%" y="318.50">0..</text></g><g><title>_dl_catch_error (libc-2.27.so) (4 samples, 2.19%)</title><rect x="11.4754%" y="324" width="2.1858%" height="15" fill="rgb(222,56,46)"/><text x="11.7254%" y="334.50">_..</text></g><g><title>_dl_catch_exception (libc-2.27.so) (4 samples, 2.19%)</title><rect x="11.4754%" y="340" width="2.1858%" height="15" fill="rgb(239,76,54)"/><text x="11.7254%" y="350.50">_..</text></g><g><title>0x7f9098d9cf96 (libdl-2.27.so) (4 samples, 2.19%)</title><rect x="11.4754%" y="356" width="2.1858%" height="15" fill="rgb(231,124,27)"/><text x="11.7254%" y="366.50">0..</text></g><g><title>0x7f90995c47ca (ld-2.27.so) (4 samples, 2.19%)</title><rect x="11.4754%" y="372" width="2.1858%" height="15" fill="rgb(249,195,6)"/><text x="11.7254%" y="382.50">0..</text></g><g><title>_dl_catch_exception (libc-2.27.so) (4 samples, 2.19%)</title><rect x="11.4754%" y="388" width="2.1858%" height="15" fill="rgb(237,174,47)"/><text x="11.7254%" y="398.50">_..</text></g><g><title>0x7f90995c50bd (ld-2.27.so) (4 samples, 2.19%)</title><rect x="11.4754%" y="404" width="2.1858%" height="15" fill="rgb(206,201,31)"/><text x="11.7254%" y="414.50">0..</text></g><g><title>0x7f90995bcaf9 (ld-2.27.so) (3 samples, 1.64%)</title><rect x="12.0219%" y="420" width="1.6393%" height="15" fill="rgb(231,57,52)"/><text x="12.2719%" y="430.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (6 samples, 3.28%)</title><rect x="13.6612%" y="180" width="3.2787%" height="15" fill="rgb(248,177,22)"/><text x="13.9112%" y="190.50">PyA..</text></g><g><title>discover_dimensions (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (6 samples, 3.28%)</title><rect x="13.6612%" y="196" width="3.2787%" height="15" fill="rgb(215,211,37)"/><text x="13.9112%" y="206.50">dis..</text></g><g><title>discover_dimensions (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (5 samples, 2.73%)</title><rect x="14.2077%" y="212" width="2.7322%" height="15" fill="rgb(241,128,51)"/><text x="14.4577%" y="222.50">di..</text></g><g><title>sanitize_array (pandas/core/construction.py:440) (8 samples, 4.37%)</title><rect x="13.6612%" y="100" width="4.3716%" height="15" fill="rgb(227,165,31)"/><text x="13.9112%" y="110.50">sanit..</text></g><g><title>maybe_convert_platform (pandas/core/dtypes/cast.py:74) (8 samples, 4.37%)</title><rect x="13.6612%" y="116" width="4.3716%" height="15" fill="rgb(228,167,24)"/><text x="13.9112%" y="126.50">maybe..</text></g><g><title>construct_1d_object_array_from_listlike (pandas/core/dtypes/cast.py:1488) (8 samples, 4.37%)</title><rect x="13.6612%" y="132" width="4.3716%" height="15" fill="rgb(228,143,12)"/><text x="13.9112%" y="142.50">const..</text></g><g><title>array_assign_subscript (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (8 samples, 4.37%)</title><rect x="13.6612%" y="148" width="4.3716%" height="15" fill="rgb(249,149,8)"/><text x="13.9112%" y="158.50">array..</text></g><g><title>PyArray_CopyObject (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (8 samples, 4.37%)</title><rect x="13.6612%" y="164" width="4.3716%" height="15" fill="rgb(243,35,44)"/><text x="13.9112%" y="174.50">PyArr..</text></g><g><title>setArrayFromSequence (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (2 samples, 1.09%)</title><rect x="16.9399%" y="180" width="1.0929%" height="15" fill="rgb(246,89,9)"/><text x="17.1899%" y="190.50"></text></g><g><title>__init__ (pandas/core/series.py:305) (9 samples, 4.92%)</title><rect x="13.6612%" y="84" width="4.9180%" height="15" fill="rgb(233,213,13)"/><text x="13.9112%" y="94.50">__init..</text></g><g><title>0x7f909905b6a1 (libc-2.27.so) (3 samples, 1.64%)</title><rect x="20.2186%" y="356" width="1.6393%" height="15" fill="rgb(233,141,41)"/><text x="20.4686%" y="366.50"></text></g><g><title>arrow::BufferBuilder::Resize (libarrow_python.so.16.0.0) (7 samples, 3.83%)</title><rect x="19.6721%" y="228" width="3.8251%" height="15" fill="rgb(239,167,4)"/><text x="19.9221%" y="238.50">arro..</text></g><g><title>arrow::PoolBuffer::Resize (libarrow.so.16.0.0) (7 samples, 3.83%)</title><rect x="19.6721%" y="244" width="3.8251%" height="15" fill="rgb(209,217,16)"/><text x="19.9221%" y="254.50">arro..</text></g><g><title>arrow::BaseMemoryPoolImpl&lt;arrow::(anonymous namespace)::JemallocAllocator&gt;::Reallocate (libarrow.so.16.0.0) (7 samples, 3.83%)</title><rect x="19.6721%" y="260" width="3.8251%" height="15" fill="rgb(219,88,35)"/><text x="19.9221%" y="270.50">arro..</text></g><g><title>je_arrow_rallocx (jemalloc.c:3279) (7 samples, 3.83%)</title><rect x="19.6721%" y="276" width="3.8251%" height="15" fill="rgb(220,193,23)"/><text x="19.9221%" y="286.50">je_a..</text></g><g><title>iralloct (jemalloc_internal_inlines_c.h:192) (7 samples, 3.83%)</title><rect x="19.6721%" y="292" width="3.8251%" height="15" fill="rgb(230,90,52)"/><text x="19.9221%" y="302.50">iral..</text></g><g><title>je_arrow_private_je_arena_ralloc (arena.c:1823) (7 samples, 3.83%)</title><rect x="19.6721%" y="308" width="3.8251%" height="15" fill="rgb(252,106,19)"/><text x="19.9221%" y="318.50">je_a..</text></g><g><title>je_arrow_private_je_large_ralloc (large.c:312) (7 samples, 3.83%)</title><rect x="19.6721%" y="324" width="3.8251%" height="15" fill="rgb(206,74,20)"/><text x="19.9221%" y="334.50">je_a..</text></g><g><title>memcpy (string3.h:52) (7 samples, 3.83%)</title><rect x="19.6721%" y="340" width="3.8251%" height="15" fill="rgb(230,138,44)"/><text x="19.9221%" y="350.50">memc..</text></g><g><title>arrow::BaseBinaryBuilder&lt;arrow::BinaryType&gt;::Append (libarrow_python.so.16.0.0) (9 samples, 4.92%)</title><rect x="19.6721%" y="212" width="4.9180%" height="15" fill="rgb(235,182,43)"/><text x="19.9221%" y="222.50">arrow:..</text></g><g><title>memcpy (libc-2.27.so) (2 samples, 1.09%)</title><rect x="23.4973%" y="228" width="1.0929%" height="15" fill="rgb(242,16,51)"/><text x="23.7473%" y="238.50"></text></g><g><title>test_ST_Length (profile_geo.py:168) (21 samples, 11.48%)</title><rect x="13.6612%" y="68" width="11.4754%" height="15" fill="rgb(248,9,4)"/><text x="13.9112%" y="78.50">test_ST_Length (p..</text></g><g><title>array (pyarrow/lib.cpython-37m-x86_64-linux-gnu.so) (12 samples, 6.56%)</title><rect x="18.5792%" y="84" width="6.5574%" height="15" fill="rgb(210,31,22)"/><text x="18.8292%" y="94.50">array (py..</text></g><g><title>lib__ndarray_to_array (pyarrow/lib.cpython-37m-x86_64-linux-gnu.so) (12 samples, 6.56%)</title><rect x="18.5792%" y="100" width="6.5574%" height="15" fill="rgb(239,54,39)"/><text x="18.8292%" y="110.50">lib__ndar..</text></g><g><title>arrow::py::NdarrayToArrow (libarrow_python.so.16.0.0) (12 samples, 6.56%)</title><rect x="18.5792%" y="116" width="6.5574%" height="15" fill="rgb(230,99,41)"/><text x="18.8292%" y="126.50">arrow::py..</text></g><g><title>arrow::py::NumPyConverter::Convert (libarrow_python.so.16.0.0) (12 samples, 6.56%)</title><rect x="18.5792%" y="132" width="6.5574%" height="15" fill="rgb(253,106,12)"/><text x="18.8292%" y="142.50">arrow::py..</text></g><g><title>arrow::py::ConvertPySequence (libarrow_python.so.16.0.0) (12 samples, 6.56%)</title><rect x="18.5792%" y="148" width="6.5574%" height="15" fill="rgb(213,46,41)"/><text x="18.8292%" y="158.50">arrow::py..</text></g><g><title>arrow::py::TypedConverter&lt;arrow::StringType, arrow::py::StringConverter&lt;arrow::StringType, false, (arrow::py::NullCoding)1&gt;, (arrow::py::NullCoding)1&gt;::AppendMultiple (libarrow_python.so.16.0.0) (12 samples, 6.56%)</title><rect x="18.5792%" y="164" width="6.5574%" height="15" fill="rgb(215,133,35)"/><text x="18.8292%" y="174.50">arrow::py..</text></g><g><title>arrow::py::internal::VisitSequenceGeneric&lt;arrow::Status arrow::py::internal::VisitSequence&lt;arrow::py::TypedConverter&lt;arrow::StringType, arrow::py::StringConverter&lt;arrow::StringType, false, (arrow::py::NullCoding)1&gt;, (arrow::py::NullCoding)1&gt;::AppendMultiple(_object*, long)::{lambda(_object*, bool*)#1}&gt;(_object*, arrow::py::TypedConverter&lt;arrow::StringType, arrow::py::StringConverter&lt;arrow::StringType, false, (arrow::py::NullCoding)1&gt;, (arrow::py::NullCoding)1&gt;::AppendMultiple(_object*, long)::{lambda(_object*, bool*)#1}&amp;&amp;)::{lambda(_object*, long, bool*)#1}&gt; (libarrow_python.so.16.0.0) (12 samples, 6.56%)</title><rect x="18.5792%" y="180" width="6.5574%" height="15" fill="rgb(213,28,5)"/><text x="18.8292%" y="190.50">arrow::py..</text></g><g><title>arrow::py::TypedConverter&lt;arrow::StringType, arrow::py::StringConverter&lt;arrow::StringType, false, (arrow::py::NullCoding)1&gt;, (arrow::py::NullCoding)1&gt;::AppendSingle (libarrow_python.so.16.0.0) (11 samples, 6.01%)</title><rect x="19.1257%" y="196" width="6.0109%" height="15" fill="rgb(215,77,49)"/><text x="19.3757%" y="206.50">arrow::p..</text></g><g><title>GetBit (bit_util.h:428) (3 samples, 1.64%)</title><rect x="27.3224%" y="180" width="1.6393%" height="15" fill="rgb(248,100,22)"/><text x="27.5724%" y="190.50"></text></g><g><title>arrow::Array::IsNull (array.h:307) (8 samples, 4.37%)</title><rect x="26.2295%" y="164" width="4.3716%" height="15" fill="rgb(208,67,9)"/><text x="26.4795%" y="174.50">arrow..</text></g><g><title>std::__shared_ptr_access&lt;arrow::ArrayData, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator-&gt; (shared_ptr_base.h:970) (2 samples, 1.09%)</title><rect x="29.5082%" y="180" width="1.0929%" height="15" fill="rgb(219,133,21)"/><text x="29.7582%" y="190.50"></text></g><g><title>std::__shared_ptr_access&lt;arrow::ArrayData, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (shared_ptr_base.h:975) (2 samples, 1.09%)</title><rect x="29.5082%" y="196" width="1.0929%" height="15" fill="rgb(246,46,29)"/><text x="29.7582%" y="206.50"></text></g><g><title>arctern::gis::gdal::Wrapper_createFromWkt (gis_functions.cpp:213) (10 samples, 5.46%)</title><rect x="26.2295%" y="148" width="5.4645%" height="15" fill="rgb(246,185,52)"/><text x="26.4795%" y="158.50">arctern..</text></g><g><title>std::__shared_ptr_access&lt;arrow::StringArray, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator-&gt; (shared_ptr_base.h:970) (2 samples, 1.09%)</title><rect x="30.6011%" y="164" width="1.0929%" height="15" fill="rgb(252,136,11)"/><text x="30.8511%" y="174.50"></text></g><g><title>std::__shared_ptr_access&lt;arrow::StringArray, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (shared_ptr_base.h:975) (2 samples, 1.09%)</title><rect x="30.6011%" y="180" width="1.0929%" height="15" fill="rgb(219,138,53)"/><text x="30.8511%" y="190.50"></text></g><g><title>std::__shared_ptr&lt;arrow::StringArray, (__gnu_cxx::_Lock_policy)2&gt;::get (shared_ptr_base.h:1258) (2 samples, 1.09%)</title><rect x="30.6011%" y="196" width="1.0929%" height="15" fill="rgb(211,51,23)"/><text x="30.8511%" y="206.50"></text></g><g><title>0x7f909912b016 (libc-2.27.so) (2 samples, 1.09%)</title><rect x="37.1585%" y="228" width="1.0929%" height="15" fill="rgb(247,221,28)"/><text x="37.4085%" y="238.50"></text></g><g><title>OGRSimpleCurve::setNumPoints (libgdal.so.26.0.4) (2 samples, 1.09%)</title><rect x="39.3443%" y="228" width="1.0929%" height="15" fill="rgb(251,222,45)"/><text x="39.5943%" y="238.50"></text></g><g><title>OGRGeometry::importPreambleFromWkt (libgdal.so.26.0.4) (15 samples, 8.20%)</title><rect x="33.8798%" y="212" width="8.1967%" height="15" fill="rgb(217,162,53)"/><text x="34.1298%" y="222.50">OGRGeometry..</text></g><g><title>OGRWktReadToken (libgdal.so.26.0.4) (3 samples, 1.64%)</title><rect x="40.4372%" y="228" width="1.6393%" height="15" fill="rgb(229,93,14)"/><text x="40.6872%" y="238.50"></text></g><g><title>0x7f9098fe9a73 (libc-2.27.so) (2 samples, 1.09%)</title><rect x="51.9126%" y="244" width="1.0929%" height="15" fill="rgb(209,67,49)"/><text x="52.1626%" y="254.50"></text></g><g><title>0x7f909912e690 (libc-2.27.so) (2 samples, 1.09%)</title><rect x="53.0055%" y="260" width="1.0929%" height="15" fill="rgb(213,87,29)"/><text x="53.2555%" y="270.50"></text></g><g><title>0x7f9098fe9a8a (libc-2.27.so) (3 samples, 1.64%)</title><rect x="53.0055%" y="244" width="1.6393%" height="15" fill="rgb(205,151,52)"/><text x="53.2555%" y="254.50"></text></g><g><title>0x7f9098feb80a (libc-2.27.so) (7 samples, 3.83%)</title><rect x="57.9235%" y="244" width="3.8251%" height="15" fill="rgb(253,215,39)"/><text x="58.1735%" y="254.50">0x7f..</text></g><g><title>CPLReplacePointByLocalePoint (libgdal.so.26.0.4) (20 samples, 10.93%)</title><rect x="62.8415%" y="244" width="10.9290%" height="15" fill="rgb(221,220,41)"/><text x="63.0915%" y="254.50">CPLReplacePointB..</text></g><g><title>localeconv (libc-2.27.so) (19 samples, 10.38%)</title><rect x="63.3880%" y="260" width="10.3825%" height="15" fill="rgb(218,133,21)"/><text x="63.6380%" y="270.50">localeconv (lib..</text></g><g><title>CPLStrtodDelim (libgdal.so.26.0.4) (54 samples, 29.51%)</title><rect x="45.3552%" y="228" width="29.5082%" height="15" fill="rgb(221,193,43)"/><text x="45.6052%" y="238.50">CPLStrtodDelim (libgdal.so.26.0.4)</text></g><g><title>OGRSimpleCurve::importFromWkt (libgdal.so.26.0.4) (79 samples, 43.17%)</title><rect x="33.8798%" y="196" width="43.1694%" height="15" fill="rgb(240,128,52)"/><text x="34.1298%" y="206.50">OGRSimpleCurve::importFromWkt (libgdal.so.26.0.4)</text></g><g><title>OGRWktReadPointsM (libgdal.so.26.0.4) (64 samples, 34.97%)</title><rect x="42.0765%" y="212" width="34.9727%" height="15" fill="rgb(253,114,12)"/><text x="42.3265%" y="222.50">OGRWktReadPointsM (libgdal.so.26.0.4)</text></g><g><title>OGRWktReadToken (libgdal.so.26.0.4) (4 samples, 2.19%)</title><rect x="74.8634%" y="228" width="2.1858%" height="15" fill="rgb(215,223,47)"/><text x="75.1134%" y="238.50">O..</text></g><g><title>OGRGeometryFactory::createFromWkt (libgdal.so.26.0.4) (86 samples, 46.99%)</title><rect x="32.2404%" y="164" width="46.9945%" height="15" fill="rgb(248,225,23)"/><text x="32.4904%" y="174.50">OGRGeometryFactory::createFromWkt (libgdal.so.26.0.4)</text></g><g><title>OGRGeometryFactory::createFromWkt (libgdal.so.26.0.4) (86 samples, 46.99%)</title><rect x="32.2404%" y="180" width="46.9945%" height="15" fill="rgb(250,108,0)"/><text x="32.4904%" y="190.50">OGRGeometryFactory::createFromWkt (libgdal.so.26.0.4)</text></g><g><title>OGRWktReadToken (libgdal.so.26.0.4) (4 samples, 2.19%)</title><rect x="77.0492%" y="196" width="2.1858%" height="15" fill="rgb(228,208,7)"/><text x="77.2992%" y="206.50">O..</text></g><g><title>arrow::BaseBinaryArray&lt;arrow::BinaryType&gt;::GetView (array.h:822) (2 samples, 1.09%)</title><rect x="80.3279%" y="180" width="1.0929%" height="15" fill="rgb(244,45,10)"/><text x="80.5779%" y="190.50"></text></g><g><title>arrow::BaseBinaryArray&lt;arrow::BinaryType&gt;::GetView (array.h:824) (2 samples, 1.09%)</title><rect x="81.4208%" y="180" width="1.0929%" height="15" fill="rgb(207,125,25)"/><text x="81.6708%" y="190.50"></text></g><g><title>nonstd::sv_lite::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::to_string&lt;std::allocator&lt;char&gt; &gt; (string_view.hpp:916) (2 samples, 1.09%)</title><rect x="83.0601%" y="196" width="1.0929%" height="15" fill="rgb(210,195,18)"/><text x="83.3101%" y="206.50"></text></g><g><title>operator new (new_op.cc:50) (2 samples, 1.09%)</title><rect x="87.9781%" y="276" width="1.0929%" height="15" fill="rgb(249,80,12)"/><text x="88.2281%" y="286.50"></text></g><g><title>__libc_malloc (libc-2.27.so) (2 samples, 1.09%)</title><rect x="87.9781%" y="292" width="1.0929%" height="15" fill="rgb(221,65,9)"/><text x="88.2281%" y="302.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (basic_string.tcc:219) (5 samples, 2.73%)</title><rect x="86.8852%" y="260" width="2.7322%" height="15" fill="rgb(235,49,36)"/><text x="87.1352%" y="270.50">st..</text></g><g><title>arrow::BaseBinaryArray&lt;arrow::BinaryType&gt;::GetString[abi:cxx11] (array.h:831) (20 samples, 10.93%)</title><rect x="79.2350%" y="164" width="10.9290%" height="15" fill="rgb(225,32,20)"/><text x="79.4850%" y="174.50">arrow::BaseBinar..</text></g><g><title>nonstd::sv_lite::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::operator std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&lt;std::allocator&lt;char&gt; &gt; (string_view.hpp:905) (14 samples, 7.65%)</title><rect x="82.5137%" y="180" width="7.6503%" height="15" fill="rgb(215,141,46)"/><text x="82.7637%" y="190.50">nonstd::sv..</text></g><g><title>nonstd::sv_lite::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::to_string&lt;std::allocator&lt;char&gt; &gt; (string_view.hpp:917) (11 samples, 6.01%)</title><rect x="84.1530%" y="196" width="6.0109%" height="15" fill="rgb(250,160,47)"/><text x="84.4030%" y="206.50">nonstd::..</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char const*, void&gt; (basic_string.h:607) (10 samples, 5.46%)</title><rect x="84.6995%" y="212" width="5.4645%" height="15" fill="rgb(216,222,40)"/><text x="84.9495%" y="222.50">std::__..</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (basic_string.h:255) (8 samples, 4.37%)</title><rect x="85.7923%" y="228" width="4.3716%" height="15" fill="rgb(234,217,39)"/><text x="86.0423%" y="238.50">std::..</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (basic_string.h:236) (7 samples, 3.83%)</title><rect x="86.3388%" y="244" width="3.8251%" height="15" fill="rgb(207,178,40)"/><text x="86.5888%" y="254.50">std:..</text></g><g><title>arctern::gis::gdal::Wrapper_createFromWkt (gis_functions.cpp:216) (109 samples, 59.56%)</title><rect x="32.2404%" y="148" width="59.5628%" height="15" fill="rgb(221,136,13)"/><text x="32.4904%" y="158.50">arctern::gis::gdal::Wrapper_createFromWkt (gis_functions.cpp:216)</text></g><g><title>std::__shared_ptr_access&lt;arrow::StringArray, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator-&gt; (shared_ptr_base.h:970) (3 samples, 1.64%)</title><rect x="90.1639%" y="164" width="1.6393%" height="15" fill="rgb(249,199,10)"/><text x="90.4139%" y="174.50"></text></g><g><title>std::__shared_ptr_access&lt;arrow::StringArray, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (shared_ptr_base.h:975) (3 samples, 1.64%)</title><rect x="90.1639%" y="180" width="1.6393%" height="15" fill="rgb(249,222,13)"/><text x="90.4139%" y="190.50"></text></g><g><title>std::__shared_ptr&lt;arrow::StringArray, (__gnu_cxx::_Lock_policy)2&gt;::get (shared_ptr_base.h:1258) (2 samples, 1.09%)</title><rect x="90.7104%" y="196" width="1.0929%" height="15" fill="rgb(244,185,38)"/><text x="90.9604%" y="206.50"></text></g><g><title>arctern::gis::gdal::ST_Length (gis_functions.cpp:636) (122 samples, 66.67%)</title><rect x="25.6831%" y="132" width="66.6667%" height="15" fill="rgb(236,202,9)"/><text x="25.9331%" y="142.50">arctern::gis::gdal::ST_Length (gis_functions.cpp:636)</text></g><g><title>arctern::gis::gdal::LengthVisitor::visit (geometry_visitor.h:59) (2 samples, 1.09%)</title><rect x="92.8962%" y="148" width="1.0929%" height="15" fill="rgb(250,229,37)"/><text x="93.1462%" y="158.50"></text></g><g><title>OGRSimpleCurve::get_Length (libgdal.so.26.0.4) (2 samples, 1.09%)</title><rect x="92.8962%" y="164" width="1.0929%" height="15" fill="rgb(206,174,23)"/><text x="93.1462%" y="174.50"></text></g><g><title>arrow::NumericBuilder&lt;arrow::DoubleType&gt;::Append (builder_primitive.h:76) (4 samples, 2.19%)</title><rect x="93.9891%" y="148" width="2.1858%" height="15" fill="rgb(211,33,43)"/><text x="94.2391%" y="158.50">a..</text></g><g><title>arrow::ArrayBuilder::UnsafeAppendToBitmap (builder_base.h:150) (2 samples, 1.09%)</title><rect x="96.7213%" y="180" width="1.0929%" height="15" fill="rgb(245,58,50)"/><text x="96.9713%" y="190.50"></text></g><g><title>arrow::TypedBufferBuilder&lt;bool, void&gt;::UnsafeAppend (buffer_builder.h:281) (2 samples, 1.09%)</title><rect x="96.7213%" y="196" width="1.0929%" height="15" fill="rgb(244,68,36)"/><text x="96.9713%" y="206.50"></text></g><g><title>arrow::TypedBufferBuilder&lt;bool, void&gt;::mutable_data (buffer_builder.h:367) (2 samples, 1.09%)</title><rect x="96.7213%" y="212" width="1.0929%" height="15" fill="rgb(232,229,15)"/><text x="96.9713%" y="222.50"></text></g><g><title>arrow::NumericBuilder&lt;arrow::DoubleType&gt;::UnsafeAppend (builder_primitive.h:241) (4 samples, 2.19%)</title><rect x="96.1749%" y="164" width="2.1858%" height="15" fill="rgb(254,30,23)"/><text x="96.4249%" y="174.50">a..</text></g><g><title>all (183 samples, 100%)</title><rect x="0.0000%" y="36" width="100.0000%" height="15" fill="rgb(235,160,14)"/><text x="0.2500%" y="46.50"></text></g><g><title>&lt;module&gt; (profile_geo.py:324) (158 samples, 86.34%)</title><rect x="13.6612%" y="52" width="86.3388%" height="15" fill="rgb(212,155,44)"/><text x="13.9112%" y="62.50">&lt;module&gt; (profile_geo.py:324)</text></g><g><title>test_ST_Length (profile_geo.py:169) (137 samples, 74.86%)</title><rect x="25.1366%" y="68" width="74.8634%" height="15" fill="rgb(226,2,50)"/><text x="25.3866%" y="78.50">test_ST_Length (profile_geo.py:169)</text></g><g><title>ST_Length (arctern_gis/arctern_gis_core_.cpython-37m-x86_64-linux-gnu.so:6074) (137 samples, 74.86%)</title><rect x="25.1366%" y="84" width="74.8634%" height="15" fill="rgb(234,177,6)"/><text x="25.3866%" y="94.50">ST_Length (arctern_gis/arctern_gis_core_.cpython-37m-x86_64-linux-gnu.so:6074)</text></g><g><title>ST_Length (arctern_gis/arctern_gis_core_.cpython-37m-x86_64-linux-gnu.so:6095) (137 samples, 74.86%)</title><rect x="25.1366%" y="100" width="74.8634%" height="15" fill="rgb(217,24,9)"/><text x="25.3866%" y="110.50">ST_Length (arctern_gis/arctern_gis_core_.cpython-37m-x86_64-linux-gnu.so:6095)</text></g><g><title>arctern::gis::ST_Length (gis_functions.cpp:218) (137 samples, 74.86%)</title><rect x="25.1366%" y="116" width="74.8634%" height="15" fill="rgb(220,13,46)"/><text x="25.3866%" y="126.50">arctern::gis::ST_Length (gis_functions.cpp:218)</text></g><g><title>arctern::gis::gdal::ST_Length (gis_functions.cpp:642) (13 samples, 7.10%)</title><rect x="92.8962%" y="132" width="7.1038%" height="15" fill="rgb(239,221,27)"/><text x="93.1462%" y="142.50">arctern::g..</text></g><g><title>arrow::NumericBuilder&lt;arrow::DoubleType&gt;::Append (builder_primitive.h:78) (7 samples, 3.83%)</title><rect x="96.1749%" y="148" width="3.8251%" height="15" fill="rgb(222,198,25)"/><text x="96.4249%" y="158.50">arro..</text></g><g><title>arrow::Status::OK (status.h:161) (2 samples, 1.09%)</title><rect x="98.9071%" y="164" width="1.0929%" height="15" fill="rgb(211,99,13)"/><text x="99.1571%" y="174.50"></text></g><g><title>arrow::Status::Status (status.h:131) (2 samples, 1.09%)</title><rect x="98.9071%" y="180" width="1.0929%" height="15" fill="rgb(232,111,31)"/><text x="99.1571%" y="190.50"></text></g></svg></svg>